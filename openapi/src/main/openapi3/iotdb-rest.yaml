---
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

openapi: 3.0.0
info:
  title: iotdb-rest
  description: IoTDB Rest API for Grafana, Prometheus, etc..
  license:
    name: Apache 2.0
  version: 1.0.0
servers:
- url: http://localhost:8080/
  description: api
security:
- basic: []
paths:
  /ping:
    get:
      summary: Your GET endpoint
      tags: []
      security:
        - basic: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              examples:
                example-1:
                  value: OK
      operationId: tryPing
      description: Just for checking whether the server works
  /v1/rest/write:
    post:
      summary: Serve for writing data by OpenApi
      description:
      operationId: post-v1-rest-data-write
      parameters: []
      requestBody:
        description: Insert Plan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteData'
            examples: {}
      responses:
        "200":
          description: Return data status
          content:
            application/json:
              schema:
                type: string
                description: "reason: \nnot login\nno permission"
              examples:
                example-1:
                  value: success;
        "401":
          description: Example response
          content:
            application/json:
              schema:
                type: string
                description: "reason: \nnot login\nno permission"
              examples:
                example-1:
                  value: passowrd is incorrect;
  /v1/rest/nonQuery:
    post:
      summary: Serve for non query by OpenApi
      description:
      operationId: post-v1-non-query
      parameters: [ ]
      requestBody:
        description: non query Plan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadData'
            examples: { }
      responses:
        "200":
          description: return executed status
          content:
            application/json:
              schema:
                type: string
                description: "return executed status"
              examples:
                example-1:
                  value: executed success;
        "401":
          description: Example response
          content:
            application/json:
              schema:
                type: string
                description: "reason: \nnot login\nno permission"
              examples:
                example-1:
                  value: passowrd is incorrect;
  /v1/rest/read:
    post:
      summary: Serve for read data by OpenApi
      description:
      operationId: post-v1-rest-data-read
      parameters: []
      requestBody:
        description: Read Plan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadData'
            examples: {}
      responses:
        "200":
          description: return data in wide table format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrafanaDataFrame'
              examples: {}
        "401":
          description: Example response
          content:
            application/json:
              schema:
                type: string
                description: "reason: \nnot login\nno permission"
              examples:
                example-1:
                  value: passowrd is incorrect;
components:
  schemas:
    WriteData:
      title: Write Data
      type: object
      properties:
        params:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
        paths:
          type: array
          items:
            type: string
      description: write data in IoTDB
      x-examples:
        example-1:
          params:
            []
          valuses:
            - - string
          paths:
            - - string
    ReadData:
      title: Read Data
      type: object
      properties:
        sql:
          type: string
      description: read data in IoTDB
      x-examples:
        example-1:
          sql: string
    GrafanaDataFrame:
      minItems: 1
      uniqueItems: true
      type: array
      items:
        $ref: '#/components/schemas/GrafanaDataFrame_inner'
      x-examples:
        example-1:
        - name: test
          fields:
          - name: Time
            type: FieldType.time
            values:
            - 1610111000
            - 1610111100
            - 1610112000
          - name: root.sg.d1.s1
            type: FieldType.number
            values:
            - 1
            - 2
            - 3
          - name: root.sg.d1.s2
            type: FieldType.number
            values:
            - 1
            - null
            - 3
          - name: root.sg.d1.s3
            type: FieldType.boolean
            values:
            - 0
            - 0
            - 1
    GrafanaDataFrame_inner:
      required:
      - fields
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: prefix of series path
        fields:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            required:
            - name
            - type
            type: object
            properties:
              name:
                minLength: 1
                type: string
                description: Time, or series name
              type:
                minLength: 1
                type: string
                description: FieldType.time or FieldType.number
              values:
                type: array
                description: points (time column or value column)
                items: {}
  securitySchemes:
    basic:
      type: http
      scheme: basic
    APIKey:
      type: apiKey
      name: API Key
      in: header
