# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: C++ Client CI with Maven

on:
  push:
    branches: 
      - master
      - 'rel/*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: 
      - master
      - 'rel/*'
      - cluster_new
    paths-ignore:
      - 'docs/**'
        
jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    env:
      java: 11.0.x
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ env.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Check Apache Rat
        run: mvn -B apache-rat:check
      - name: Test with Maven
        run:  mvn -B integration-test -P client-cpp -pl client-cpp,compile-tools,compile-tools/boost,compile-tools/thrift,server -am -Diotdb.test.skip=true -Dtsfile.test.skip=true -Djdbc.test.skip=true
  MacOS:
    runs-on: macos-latest
    env:
      java: 11.0.x
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ env.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install Bison
        run: brew install bison
      - name: Test with Maven
        run: export PATH="/usr/local/opt/bison/bin:$PATH" && 
             export LDFLAGS="-L/usr/local/opt/bison/lib" && 
             mvn -B integration-test -P client-cpp -pl client-cpp,compile-tools,compile-tools/boost,compile-tools/thrift,server -am -Diotdb.test.skip=true -Dtsfile.test.skip=true -Djdbc.test.skip=true
   
  Windows:
    runs-on: windows-latest
    env:
      java: 11.0.x
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ env.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Chocolatey Action
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        with:
          args: -h
          java-version: ${{ env.java }}
      - name: Install Bison and Flex
        run: choco install winflexbison
      - name: Test with Maven
        run: mvn -B integration-test -P client-cpp -pl client-cpp,compile-tools,compile-tools/boost,compile-tools/thrift,server -am -Diotdb.test.skip=true -Dtsfile.test.skip=true -Djdbc.test.skip=true


     
